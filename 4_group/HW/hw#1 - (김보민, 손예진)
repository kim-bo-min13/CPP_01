<프로그래밍 언어>

기계어란 컴퓨터의 기본 단위인 0과 1로 이루어진 언어라고 생각했다. 하지만 강의 페이지에 적혀져 있지 않았더라면 이 답변이 나오기도 어려울 수 있다는 생각이 들기도 했다. CPU는 본질적으로 기계어만 처리 가능하다는 사실을 덧붙여서 알게 되었다.

어셈블리어라는 용어는 들어봤지만 사실상 기계어나 고급언어처럼 우리가 직접적으로 배운 적이 없기에 용어를 정확히 설명할 수 없었다. 하지만 1주차 강의를 통하여 이것은 기계어의 명령을 상징적인 니모닉 기호로 일대응 대응시킨 언어라는 것과 더 나아가 어셈블러는 어셈블리어 프로그램을 기계어 코드로 변환할 수 있다는 것을 알게 되었다.

고급언어는 우리가 1-2학년 때 계속해서 배운 언어들, 파이썬, 자바, C++, C를 예로 들 수 있다고 생각했다. 하지만 이뿐만 아니라 우리는 고급언어로 프로그램을 작성하고 이것이 기계어 코드로 변경되어 컴파일러 된다는 사실을 알 수 있었다.

<C언어에 추가한 기능>

함수 중복
ㄴ 한 클래스 안에 있는 변수가 다른 클래스에서도 쓰이는 것을 의미한다.
ㄴ c에서는 같은 이름은 가진 함수가 여러번 정의되는 것이 허용되지 않지만  c++에서는 허용
ㄴ 매개 변수의 개수나 타입이 다른 동일한 이름의 함수들 선언

디폴트 매개 변수
ㄴ 매개 변수에 디폴트 값이 들어가는 것
ㄴ 매개 변수에 디폴트 값이 전달되도록 함수 선언

참조와 참조변수
ㄴ 변수에 이름을 붙여주는 참조 변수
ㄴ 하나의 변수에 별명을 사용하는 참조 변수 도입

참조에 의한 호출
ㄴ 변수에 이름을 붙힌 참조 변수가 있는 함수를 호출할 때 참조가 전달 되는 것
ㄴ 참조가 전달되는 것
ㄴ 함수 호출 시 참조 전달

new / Delete 연산자
ㄴ 메모리 생성과 삭제를 위한 것
ㄴ 동적 메모리 할당/해제를 위해 new와 delete 연산자 도입



연산자 재정의
ㄴ 연산자를 새롭게 정의하는 것
ㄴ 기존에 입력되어있는 연산자가 아닌 새롭게 정의하는 것
ㄴ 비주얼스튜디오에 기본적으로 저장되어있는 것이 아닌 사용자가 임의로 만든 것
ㄴ 기존 C++ 연산자에 새로운 연산 정의

제네릭 함수와 클래스
ㄴ 여러 가지 데이터 유형을 가진 클래스
ㄴ 클래스 내의 데이터가 일반화 되어있는 것
ㄴ 데이터 타입에 의존하지 않고 일반화 시킨 함수나 클래스 작성
